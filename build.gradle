buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/gradle-plugin" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        //noinspection DifferentKotlinGradleVersion
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72'
        classpath "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0"
    }
}

ext {
    configuration = [
            javaVersion = JavaVersion.VERSION_1_8
    ]

}
allprojects {
    group = 'chat.qiye.wechat'
    version = "1.0.0-SNAPSHOT"
}

description = "企业微信 开发 工具包"

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'
//    apply plugin: 'com.github.hierynomus.license'



    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.warnings = false
        options.deprecation = true
        options.compilerArgs += ["-parameters"]
    }

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }


    dependencies {

        implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'

        testCompile group: 'junit', name: 'junit', version: '4.12'
//    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    }


    //noinspection GroovyAssignabilityCheck
    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allJava
    }

    javadoc {
        afterEvaluate {
            configure(options) {
                encoding "UTF-8"
                charSet 'UTF-8'
                author true
                version true
                failOnError false
                links "http://docs.oracle.com/javase/8/docs/api"
            }
        }
    }

//    tasks.whenTaskAdded { task ->
//        if (task.name.contains('signMavenJavaPublication')) {
//            task.enabled = new File(project.property('signing.secretKeyRingFile') as String).isFile()
//        }
//    }



}
